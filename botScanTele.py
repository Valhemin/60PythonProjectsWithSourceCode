import qrcode 
import telebot
import cv2
import os
import numpy as np
try:
    import pyzbar.pyzbar as pyzbar
except:
    os.system("pip install pyzbar")    

bot = telebot.TeleBot("6790339105:AAHO2dZN-ZjKJ5Qt8IH8o-W50dV5HLQgbSk")

@bot.message_handler(commands=['start'])
def welcome(message):
    bot.reply_to(message, "CH√ÄO M·ª™NG B·∫†N ƒê·∫æN V·ªöI QR BOT TELEGRAM")
    
@bot.message_handler(commands=['tacgia'])
def tacgia(message):
    bot.reply_to(message, "NGUY·ªÑN TR∆Ø·ªúNG CHINH\n\n@Chinhcoder : ZALO : 0776186410") 

# Ti·∫øn h√†nh x·ª≠ l√Ω c√°c m√£ QR code ƒë∆∞·ª£c qu√©t ƒë∆∞·ª£c t·∫°i ƒë√¢y      
@bot.message_handler(commands=['qrcode'])
def tao_qrcode(message):
    try:
        if len(message.text.split()) == 1: 
            bot.reply_to(message, "Kh√¥ng ƒë·ªÉ tr·ªëng n·ªôi dung")
        else:
            link = message.text.split()
            image = qrcode.make(link)
            image.save("qrcode.png")
            bot.send_photo(message.chat.id, open('qrcode.png', 'rb'))
    except :
        bot.reply_to(message, f"Kh√¥ng nh·∫≠n di·ªán ƒë∆∞·ª£c QRCode")   

@bot.message_handler(commands=['code'])
def tim_qrcode(message):
    bot.reply_to(message, "H√£y g·ª≠i m·ªôt ·∫£nh ch·ª©a m√£ QR code.")

@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    try:
        file_info = bot.get_file(message.photo[-1].file_id) 
        downloaded_file = bot.download_file(file_info.file_path)
        with open('qr_code.jpg', 'wb') as new_file:
            new_file.write(downloaded_file)
        
        if os.path.exists('qr_code.jpg'):
            qr_code_image = cv2.imread('qr_code.jpg')
            qr_code_detector = cv2.QRCodeDetector()
            decoded_data, points, _ = qr_code_detector.detectAndDecode(qr_code_image)
        
            if points is not None:
                decoded_text = decoded_data
                bot.reply_to(message, f"N·ªôi dung c·ªßa m√£ QR l√†: {decoded_text}")
            else:
                bot.reply_to(message, "Kh√¥ng t√¨m th·∫•y m√£ QR trong ·∫£nh.")
        else:
            bot.reply_to(message, "Kh√¥ng t√¨m th·∫•y t·ªáp ·∫£nh.")
    except :
        bot.reply_to(message,"Kh√¥ng nh·∫≠n di·ªán ƒë∆∞·ª£c QRCode")


@bot.message_handler(func=lambda message: message.text == '1')
def option_1(message):
    bot.reply_to(message, "Nh·∫≠p QR Code (/qrcode + n·ªôi dung)")

@bot.message_handler(func=lambda message: message.text == '2')
def option_2(message):
    bot.reply_to(message, "G·ª≠i ·∫£nh QR Code c·∫ßn t√¨m ki·∫øm ")

@bot.message_handler(func=lambda message: message.text not in ["/start", "/qrcode", "/tacgia", "/code"])
def option_menu(message):
    bot.reply_to(message, "Xin l·ªói, t√¥i kh√¥ng hi·ªÉu √Ω b·∫°n! H√£y ch·ªçn 1 trong nh·ªØng l·ª±a ch·ªçn b√™n d∆∞·ªõi üëá\n( 1 ) : T·∫°o QR Code\n( 2 ) : T√¨m ki·∫øm n·ªôi dung QR Code\n\n(/tacgia)")   
         
bot.polling()
